name: Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.10'
  PIP_CACHE_DIR: ~/.cache/pip
  PRE_COMMIT_CACHE_DIR: ~/.cache/pre-commit
  PACKAGE_NAME: code-preprocessor

jobs:
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
      - name: Cache virtualenv
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.PIP_CACHE_DIR }}
            .venv
            ~/.local
          key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('pyproject.toml') }}

  format:
    name: Code Formatting
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      - name: Restore virtualenv
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.PIP_CACHE_DIR }}
            .venv
            ~/.local
          key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('pyproject.toml') }}
      - name: Cache pre-commit
        uses: actions/cache@v3
        with:
          path: ${{ env.PRE_COMMIT_CACHE_DIR }}
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Check black formatting
        run: |
          black --check .
      - name: Check import sorting
        run: |
          isort --check-only --diff .

  lint:
    name: Linting
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      - name: Restore virtualenv
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.PIP_CACHE_DIR }}
            .venv
            ~/.local
          key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('pyproject.toml') }}
      - name: Run flake8
        run: |
          flake8 ${{ env.PACKAGE_NAME }}/
      - name: Run pylint
        run: |
          pylint ${{ env.PACKAGE_NAME }}/

  type-check:
    name: Type Checking
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      - name: Restore virtualenv
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.PIP_CACHE_DIR }}
            .venv
            ~/.local
          key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('pyproject.toml') }}
      - name: Cache mypy
        uses: actions/cache@v3
        with:
          path: ~/.mypy_cache
          key: mypy-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('**/*.py') }}
      - name: Run mypy
        run: |
          mypy ${{ env.PACKAGE_NAME }}/

  test:
    name: Run Tests (CPU)
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      - name: Restore virtualenv
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.PIP_CACHE_DIR }}
            .venv
            ~/.local
          key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('pyproject.toml') }}
      - name: Cache pytest
        uses: actions/cache@v3
        with:
          path: |
            .pytest_cache
            .coverage
          key: pytest-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('**/*.py') }}
      - name: Run tests
        run: |
          pytest --cov --cov-report=xml
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  build:
    name: Build Package
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      - name: Restore virtualenv
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.PIP_CACHE_DIR }}
            .venv
            ~/.local
          key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('pyproject.toml') }}
      - name: Build package
        run: |
          python -m build
      - name: Check wheel and sdist
        run: |
          twine check dist/*

  compatibility:
    name: Python Compatibility
    needs: [test]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ['3.10', '3.11']
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Cache virtualenv
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.PIP_CACHE_DIR }}
            .venv
            ~/.local
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
      - name: Cache pytest
        uses: actions/cache@v3
        with:
          path: |
            .pytest_cache
            .coverage
          key: pytest-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('**/*.py') }}
      - name: Run tests
        run: |
          pytest
